/**
 * Space Explorer - Interactive Educational Game
 * 
 * Setup and Run Instructions:
 * 
 * 1. Install dependencies:
 *    npm install react lucide-react @/components/ui
 * 
 * 2. Create Next.js project (if not existing):
 *    npx create-next-app@latest space-explorer --typescript --tailwind --app
 * 
 * 3. Add this file as:
 *    src/components/InteractiveSpace.jsx
 * 
 * 4. Run the development server:
 *    npm run dev
 * 
 * 5. Open in browser:
 *    http://localhost:3000
 * 
 * Required dependencies:
 * - React
 * - lucide-react
 * - @/components/ui/card (from shadcn/ui)
 * 
 * Note: Ensure you have the required shadcn/ui components installed:
 * npx shadcn-ui@latest add card
 */

import React, { useState, useEffect } from 'react';
import { Rocket, Star, Moon, Sun, CircleDot, Info } from 'lucide-react';
import { Card, CardContent } from '@/components/ui/card';

const InteractiveSpace = () => {
  const [position, setPosition] = useState({ x: 50, y: 50 });
  const [currentLocation, setCurrentLocation] = useState(null);
  const [showInfo, setShowInfo] = useState(false);
  const [fuel, setFuel] = useState(100);
  const [discoveredObjects, setDiscoveredObjects] = useState([]);

  const spaceObjects = [
    {
      id: 'sun',
      name: 'The Sun',
      x: 20,
      y: 20,
      icon: <Sun className="w-16 h-16 text-yellow-400" />,
      info: "The Sun is our star! It's so big that over a million Earths could fit inside it.",
      funFact: "The Sun's surface temperature is about 10,000°F!"
    },
    {
      id: 'moon',
      name: 'The Moon',
      x: 70,
      y: 30,
      icon: <Moon className="w-12 h-12 text-gray-300" />,
      info: "The Moon is Earth's only natural satellite.",
      funFact: "The Moon is slowly moving away from Earth at about 1.5 inches per year!"
    },
    {
      id: 'mars',
      name: 'Mars',
      x: 80,
      y: 70,
      icon: <CircleDot className="w-14 h-14 text-red-500" />,
      info: "Mars is called the Red Planet because of its rusty color.",
      funFact: "Mars has the largest volcano in our solar system - it's three times taller than Mount Everest!"
    }
  ];

  const moveShip = (direction) => {
    if (fuel > 0) {
      setFuel(prev => Math.max(0, prev - 0.5));
      
      setPosition(prev => {
        const newPos = { ...prev };
        const step = 5;
        
        switch (direction) {
          case 'up':
            newPos.y = Math.max(0, prev.y - step);
            break;
          case 'down':
            newPos.y = Math.min(90, prev.y + step);
            break;
          case 'left':
            newPos.x = Math.max(0, prev.x - step);
            break;
          case 'right':
            newPos.x = Math.min(90, prev.x + step);
            break;
        }
        
        return newPos;
      });

      // Check if near any space objects
      const nearbyObject = spaceObjects.find(obj => {
        const distance = Math.sqrt(
          Math.pow(obj.x - position.x, 2) + 
          Math.pow(obj.y - position.y, 2)
        );
        return distance < 15;
      });

      if (nearbyObject && !discoveredObjects.includes(nearbyObject.id)) {
        setDiscoveredObjects(prev => [...prev, nearbyObject.id]);
        setCurrentLocation(nearbyObject);
        setShowInfo(true);
      }
    }
  };

  useEffect(() => {
    const handleKeyPress = (e) => {
      switch (e.key) {
        case 'ArrowUp':
          moveShip('up');
          break;
        case 'ArrowDown':
          moveShip('down');
          break;
        case 'ArrowLeft':
          moveShip('left');
          break;
        case 'ArrowRight':
          moveShip('right');
          break;
      }
    };

    window.addEventListener('keydown', handleKeyPress);
    return () => window.removeEventListener('keydown', handleKeyPress);
  }, [position, fuel]);

  return (
    <div className="max-w-4xl mx-auto p-4">
      <div className="mb-4 flex justify-between items-center">
        <div className="text-xl font-bold">Space Explorer</div>
        <div className="flex items-center gap-4">
          <div className="flex items-center">
            <Star className="w-5 h-5 text-yellow-400 mr-2" />
            <span>Discoveries: {discoveredObjects.length}/{spaceObjects.length}</span>
          </div>
          <div className={`flex items-center ${fuel < 20 ? 'text-red-500' : ''}`}>
            <Rocket className="w-5 h-5 mr-2" />
            <span>Fuel: {Math.round(fuel)}%</span>
          </div>
        </div>
      </div>

      <Card className="relative bg-gray-900 h-96">
        <CardContent className="h-full p-0">
          <div className="relative w-full h-full overflow-hidden">
            {/* Space background with stars */}
            {[...Array(50)].map((_, i) => (
              <Star
                key={i}
                className="absolute w-2 h-2 text-white opacity-50"
                style={{
                  left: `${Math.random() * 100}%`,
                  top: `${Math.random() * 100}%`,
                  animation: `twinkle ${Math.random() * 3 + 1}s infinite`
                }}
              />
            ))}

            {/* Space Objects */}
            {spaceObjects.map((obj) => (
              <div
                key={obj.id}
                className="absolute transform -translate-x-1/2 -translate-y-1/2"
                style={{ left: `${obj.x}%`, top: `${obj.y}%` }}
              >
                {obj.icon}
              </div>
            ))}

            {/* Player's spacecraft */}
            <div
              className="absolute transform -translate-x-1/2 -translate-y-1/2 transition-all duration-200"
              style={{ left: `${position.x}%`, top: `${position.y}%` }}
            >
              <Rocket className="w-8 h-8 text-white" />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Controls */}
      <div className="mt-4 grid grid-cols-3 gap-2 text-center">
        <div></div>
        <button
          onClick={() => moveShip('up')}
          className="p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
        >
          ↑
        </button>
        <div></div>
        <button
          onClick={() => moveShip('left')}
          className="p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
        >
          ←
        </button>
        <button
          onClick={() => moveShip('down')}
          className="p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
        >
          ↓
        </button>
        <button
          onClick={() => moveShip('right')}
          className="p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
        >
          →
        </button>
      </div>

      {/* Information Modal */}
      {showInfo && currentLocation && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
          <Card className="max-w-md w-full">
            <CardContent className="p-6">
              <div className="flex items-center mb-4">
                {currentLocation.icon}
                <h2 className="text-2xl font-bold ml-4">{currentLocation.name}</h2>
              </div>
              <p className="mb-4">{currentLocation.info}</p>
              <div className="bg-blue-50 p-4 rounded-lg mb-4">
                <div className="flex items-center">
                  <Info className="w-5 h-5 text-blue-500 mr-2" />
                  <span className="font-medium">Fun Fact:</span>
                </div>
                <p className="mt-2">{currentLocation.funFact}</p>
              </div>
              <button
                onClick={() => setShowInfo(false)}
                className="w-full p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
              >
                Continue Exploring
              </button>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  );
};

export default InteractiveSpace;
